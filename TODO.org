* Need to do
- Make up a name for the language
- Make base ResolveEnv with built-in functions
  - Expose parser-combinators to MLOID
- How do booleans work between MLOID & racket?
- How can MLOID generate racket code?
- Implement syntax-extension forms
- Implement more forms
- Implement casing, either w/in language or in Racket
- Allow either decls or exprs in repl

* Would be nice
- Print what happened when decls issued at repl
- Generate a well-defined IR instead of Racket.
- A good way to define plain old infix functions
  (as opposed to infix syntax, which is more general)
- Parameter for debug-spew, macros that print only if it's #t.
